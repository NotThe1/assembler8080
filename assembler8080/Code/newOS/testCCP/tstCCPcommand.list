0001: 0000              ;tstCCPcommand.asm 
0002: 0000              ;                  
0003: 0000                                 
0004: 0000              ;Include ../../Headers/stdHeader.asm
0005: 0000              BIOS	EQU	0F600H    
0006: 0000              BDOSEntry	EQU	0E806H
0007: 0000              CCPEntry	EQU	0E000H
0008: 0000                                 
0009: 0000              CodeStart:         
0010: 0000              	ORG	1000H         
0011: 1000  310010      	LXI	SP, $		       
0012: 1003  212710      	LXI	HL, messBegin 
0013: 1006  CD5A11      	CALL	x_displayMessage
0014: 1009              	                  
0015: 1009  CD2610      	CALL	test         
0016: 100C  1E00        	MVI	E,000H	; set e = 0 for disk A
0017: 100E  0E0E        	MVI	C,0EH         
0018: 1010  CD06E8      	CALL	BDOSEntry		; select disk A
0019: 1013              	                  
0020: 1013  0E19        	MVI	C,019H        
0021: 1015  CD06E8      	CALL	BDOSEntry		; get selected disk into A
0022: 1018  4F          	MOV	C,A			; move it to c before calling CCP
0023: 1019  320400      	STA	0004H		; shove it into page 0
0024: 101C  CD00E0      	CALL	CCPEntry     
0025: 101F              ;		                
0026: 101F  213C10      	LXI	HL, messOK    
0027: 1022  CD5A11      	CALL	x_displayMessage
0028: 1025  76          	HLT               
0029: 1026              ;		                
0030: 1026              test:              
0031: 1026              ;        1         2         3         4         5
0032: 1026              ;2345678901234567890123456789012345678901234567890
0033: 1026              ;A	B	C	D	E         
0034: 1026  C9          		RET              
0035: 1027                                 
0036: 1027                                 
0037: 1027  5374617274696E672074686520746573742E0D0A00  messBegin:	DB		'Starting the test.',xx_CR,xx_LF,xx_EOM	
0038: 103C  7468652074657374207761732061207375636365737320210D0A00  messOK:	DB		'the test was a success !',xx_CR,xx_LF,xx_EOM	
0039: 1057                                 
0040: 1057              	                  
0041: 1057              ;------------------------------------------
0042: 1057              		$Include ../../Headers/debug1Header.asm
0042: 1057              ;<<<<<<<<<<<<<<<<<<<<<<<   Include  >>>>>>>>>>>>>>>>
0044: 1057              ; debug1Header.asm 
0045: 1057              ;                  
0046: 1057              ;                  
0047: 1057              ; x_displayMessage - (HL) points to 00 terminated string
0048: 1057              ; x_CRLF - Print CR LF
0049: 1057              ;                  
0050: 1057              ;	Display Ascii values of :
0051: 1057              ; x_showAddress1 - (HL) address
0052: 1057              ; x_showAddress2 - (HL) address
0053: 1057              ; x_showRegA     - (A) 
0054: 1057              ; x_displayHL	  HL value to display
0055: 1057                                 
0056: 1057                                 
0057: 1057                                 
0058: 1057              ;BIOS	EQU	0F600H   
0059: 1057              xx_EOM	EQU	00H     
0060: 1057              xx_LF	EQU	0AH      
0061: 1057              xx_CR	EQU	0DH      
0062: 1057                                 
0063: 1057              xx_BIOS	EQU	0F600H 
0064: 1057              xx_CONOUT	EQU	xx_BIOS + (3 * 4)
0065: 1057                                 
0066: 1057              	ORG	(($+0100H)/0100H) * 0100H
0067: 1100                                 
0068: 1100                                 
0069: 1100              ;--------------Show address1 & Show Address2-------------
0070: 1100              ; will display the address and contenets pointed to by HL.
0071: 1100              ; x_showAddress1 -  displays: abcd = nn	
0072: 1100              ; x_showAddress2 -  displays: abcd = nnmm	
0073: 1100                                 
0074: 1100              x_showAddress1:    
0075: 1100  F5          	PUSH	AF           
0076: 1101  C5          	PUSH	BC           
0077: 1102  D5          	PUSH	DE           
0078: 1103  E5          	PUSH	HL           
0079: 1104              	                  
0080: 1104  CD2111      	CALL	xx_SA0       
0081: 1107  CD8211      	CALL	xx_CRLF      
0082: 110A  C39111      	JMP	xx_FullExit			; restore registers and return
0083: 110D              	                  
0084: 110D              x_showAddress2:    
0085: 110D  F5          	PUSH	AF           
0086: 110E  C5          	PUSH	BC           
0087: 110F  D5          	PUSH	DE           
0088: 1110  E5          	PUSH	HL           
0089: 1111              	                  
0090: 1111  E5          	PUSH	HL           
0091: 1112  CD2111      	CALL	xx_SA0       
0092: 1115  E1          	POP	HL            
0093: 1116  23          	INX	HL            
0094: 1117  7E          	MOV	A,M           
0095: 1118  CD3511      	CALL	x_showRegA   
0096: 111B  CD8211      	CALL	xx_CRLF      
0097: 111E  C39111      	JMP	xx_FullExit			; restore registers and return
0098: 1121                                 
0099: 1121              xx_SA0:            
0100: 1121  E5          	PUSH	HL           
0101: 1122  CD6D11      	CALL	x_displayHL  
0102: 1125  213111      	LXI	HL,xx_MEQUALS 
0103: 1128  CD5A11      	CALL	x_displayMessage
0104: 112B  E1          	POP	HL            
0105: 112C  7E          	MOV	A,M           
0106: 112D  CD3511      	CALL	x_showRegA   
0107: 1130  C9          	RET               
0108: 1131              ;                  
0109: 1131              xx_MEQUALS:        
0110: 1131  203D2000    	DB ' = ',xx_EOM   
0111: 1135                                 
0112: 1135              ;--------------Show address1 & Show Address2-------------
0113: 1135                                 
0114: 1135              ;---------------------   x_showRegA  -------------------
0115: 1135                                 
0116: 1135              ; Display the contents of A
0117: 1135              x_showRegA:        
0118: 1135  F5          	PUSH	AF           
0119: 1136  C5          	PUSH	BC           
0120: 1137  D5          	PUSH	DE           
0121: 1138  E5          	PUSH	HL           
0122: 1139              	                  
0123: 1139  F5          	PUSH	PSW          
0124: 113A  CD4A11      	CALL	xx_SRA1      
0125: 113D              ;	MOV	E,A          
0126: 113D  CD8C11      	CALL	xx_PCHAR     
0127: 1140  F1          	POP	PSW           
0128: 1141  CD4E11      	CALL	xx_SRA2      
0129: 1144              ;	MOV	E,A          
0130: 1144  CD8C11      	CALL	xx_PCHAR     
0131: 1147  C39111      	JMP	xx_FullExit			; restore registers and return
0132: 114A                                 
0133: 114A              xx_SRA1:           
0134: 114A  0F          	RRC               
0135: 114B  0F          	RRC               
0136: 114C  0F          	RRC               
0137: 114D  0F          	RRC               
0138: 114E              xx_SRA2:           
0139: 114E  E60F        	ANI	0FH           
0140: 1150  FE0A        	CPI	0AH           
0141: 1152  FA5711      	JM	xx_SRA3        
0142: 1155  C607        	ADI	7             
0143: 1157              xx_SRA3:           
0144: 1157  C630        	ADI	30H           
0145: 1159  C9          	RET               
0146: 115A              ;------------------------- x_showRegA  --------------------
0147: 115A                                 
0148: 115A              ;---------------------  x_displayMessage  -----------------
0149: 115A              ; Display Message (HL) points to 00 terminated string
0150: 115A              x_displayMessage:  
0151: 115A  F5          	PUSH	AF           
0152: 115B  C5          	PUSH	BC           
0153: 115C  D5          	PUSH	DE           
0154: 115D  E5          	PUSH	HL           
0155: 115E              xx_DM:             
0156: 115E  7E          	MOV	A,M				; get next message byte
0157: 115F  B7          	ORA	A				; terminator (a = 0)?
0158: 1160  CA9111      	JZ	xx_FullExit			; restore registers and return
0159: 1163              	                  
0160: 1163  4F          	MOV	C,A				; prepare for output
0161: 1164  E5          	PUSH	HL				; save message pointer
0162: 1165  CD0CF6      	CALL	xx_CONOUT				; go to main console output routine	*******
0163: 1168  E1          	POP	H             
0164: 1169  23          	INX	H 				; point at next character
0165: 116A  C35E11      	JMP	xx_DM				; loop till done
0166: 116D              ;-------------------------  x_displayMessage --------------------
0167: 116D              ;------------------------  x_displayHL -------------------------
0168: 116D              x_displayHL:       
0169: 116D  E5          	PUSH	HL           
0170: 116E  7C          	MOV	A,H           
0171: 116F  CD3511      	CALL	x_showRegA   
0172: 1172  E1          	POP	HL            
0173: 1173  7D          	MOV	A,L           
0174: 1174  CD3511      	CALL	x_showRegA   
0175: 1177  C9          	RET               
0176: 1178              ;------------------------  x_displayHL -------------------------
0177: 1178                                 
0178: 1178              ;------------------------     x_CRLF   -------------------------
0179: 1178              x_CRLF:            
0180: 1178  F5          	PUSH	AF           
0181: 1179  C5          	PUSH	BC           
0182: 117A  D5          	PUSH	DE           
0183: 117B  E5          	PUSH	HL           
0184: 117C  CD8211      	CALL	xx_CRLF	; call routine
0185: 117F  C39111      	JMP	xx_FullExit	; restore registers and return
0186: 1182              ;------------------------     x_CRLF   -------------------------
0187: 1182                                 
0188: 1182                                 
0189: 1182              ;------------------------     xx_CRLF   -------------------------
0190: 1182              xx_CRLF:           
0191: 1182  218911      	LXI	HL,xx_MCRLF   
0192: 1185  CD5A11      	CALL	x_displayMessage
0193: 1188  C9          	RET               
0194: 1189              xx_MCRLF:          
0195: 1189  0D0A00      	DB	xx_CR,xx_LF,xx_EOM
0196: 118C              ;------------------------     xx_CRLF   -------------------------
0197: 118C              ;------------------------     xx_PCHAR  -------------------------
0198: 118C              ;CHARACTER OUTPUT ROUTINE
0199: 118C              ;                  
0200: 118C              xx_PCHAR:          
0201: 118C  4F          	MOV	C,A           
0202: 118D  CD0CF6      	CALL	xx_CONOUT    
0203: 1190  C9          	RET	              
0204: 1191              ;------------------------     xx_PCHAR  -------------------------
0205: 1191                                 
0206: 1191                                 
0207: 1191              ;                  
0208: 1191              ;-------------------- xx_FullExit ---------------------
0209: 1191              ; restores all the registeres and returns
0210: 1191              ; should be called by a JMP Statement
0211: 1191              xx_FullExit:       
0212: 1191  E1          	POP	HL            
0213: 1192  D1          	POP	DE            
0214: 1193  C1          	POP	BC            
0215: 1194  F1          	POP	AF            
0216: 1195  C9          	RET               
0217: 1196                                 
0218: 1196              ;=========================
0218: 1196              ;<<<<<<<<<<<<<<<<<<<<<<<   Include  >>>>>>>>>>>>>>>>
0220: 1196              				               
0221: 1196              CodeEnd:           




                                    Xref


0000	0000	$                             		  0066,

0006	E806	BDOSEntry                     		  0018,  0021,
0005	F600	BIOS                          		

0007	E000	CCPEntry                      		  0024,
0221	1196	CodeEnd                       		
0009	0000	CodeStart                     		

0037	1027	messBegin                     		  0012,
0038	103C	messOK                        		  0026,

0030	1026	test                          		  0015,

0179	1178	x_CRLF                        		
0168	116D	x_displayHL                   		  0101,
0150	115A	x_displayMessage              		  0013,  0027,  0103,  0192,
0074	1100	x_showAddress1                		
0084	110D	x_showAddress2                		
0117	1135	x_showRegA                    		  0095,  0106,  0171,  0174,
0063	F600	xx_BIOS                       		  0064,
0064	F60C	xx_CONOUT                     		  0162,  0202,
0061	000D	xx_CR                         		  0037,  0038,  0195,
0190	1182	xx_CRLF                       		  0081,  0096,  0184,
0155	115E	xx_DM                         		  0165,
0059	0000	xx_EOM                        		  0037,  0038,  0110,  0195,
0211	1191	xx_FullExit                   		  0082,  0097,  0131,  0158,  0185,
0060	000A	xx_LF                         		  0037,  0038,  0195,
0194	1189	xx_MCRLF                      		  0191,
0109	1131	xx_MEQUALS                    		  0102,
0200	118C	xx_PCHAR                      		  0126,  0130,
0099	1121	xx_SA0                        		  0080,  0091,
0133	114A	xx_SRA1                       		  0124,
0138	114E	xx_SRA2                       		  0128,
0143	1157	xx_SRA3                       		  0141,
