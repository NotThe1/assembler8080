0001: 0000              ;tstCCPcommand.asm 
0002: 0000              ;                  
0003: 0000                                 
0004: 0000              ;Include ../../Headers/stdHeader.asm
0005: 0000              BIOS	EQU	0F600H    
0006: 0000              BDOSEntry	EQU	0E806H
0007: 0000              CCPEntry	EQU	0E000H
0008: 0000                                 
0009: 0000              CodeStart:         
0010: 0000              	ORG	0100H         
0011: 0100  310001      	LXI	SP, $		       
0012: 0103  212701      	LXI	HL, messBegin 
0013: 0106  CD5A02      	CALL	x_displayMessage
0014: 0109              	                  
0015: 0109  CD2601      	CALL	test         
0016: 010C  1E00        	MVI	E,000H	; set e = 0 for disk A
0017: 010E  0E0E        	MVI	C,0EH         
0018: 0110  CD06E8      	CALL	BDOSEntry		; select disk A
0019: 0113              	                  
0020: 0113  0E19        	MVI	C,019H        
0021: 0115  CD06E8      	CALL	BDOSEntry		; get selected disk into A
0022: 0118  4F          	MOV	C,A			; move it to c before calling CCP
0023: 0119  320400      	STA	0004H		; shove it into page 0
0024: 011C  CD00E0      	CALL	CCPEntry     
0025: 011F              ;		                
0026: 011F  213C01      	LXI	HL, messOK    
0027: 0122  CD5A02      	CALL	x_displayMessage
0028: 0125  76          	HLT               
0029: 0126              ;		                
0030: 0126              test:              
0031: 0126              ;        1         2         3         4         5
0032: 0126              ;2345678901234567890123456789012345678901234567890
0033: 0126              ;A	B	C	D	E         
0034: 0126  C9          		RET              
0035: 0127                                 
0036: 0127                                 
0037: 0127  5374617274696E672074686520746573742E0D0A00  messBegin:	DB		'Starting the test.',xx_CR,xx_LF,xx_EOM	
0038: 013C  7468652074657374207761732061207375636365737320210D0A00  messOK:	DB		'the test was a success !',xx_CR,xx_LF,xx_EOM	
0039: 0157                                 
0040: 0157              	                  
0041: 0157              ;------------------------------------------
0042: 0157              		$Include ../../Headers/debug1Header.asm
0042: 0157              ;<<<<<<<<<<<<<<<<<<<<<<<   Include  >>>>>>>>>>>>>>>>
0044: 0157              ; debug1Header.asm 
0045: 0157              ;                  
0046: 0157              ;                  
0047: 0157              ; x_displayMessage - (HL) points to 00 terminated string
0048: 0157              ; x_CRLF - Print CR LF
0049: 0157              ;                  
0050: 0157              ;	Display Ascii values of :
0051: 0157              ; x_showAddress1 - (HL) address
0052: 0157              ; x_showAddress2 - (HL) address
0053: 0157              ; x_showRegA     - (A) 
0054: 0157              ; x_displayHL		  HL value to display
0055: 0157                                 
0056: 0157                                 
0057: 0157                                 
0058: 0157              ;BIOS	EQU		0F600H  
0059: 0157              xx_EOM		EQU		00H   
0060: 0157              xx_LF		EQU		0AH    
0061: 0157              xx_CR		EQU		0DH    
0062: 0157                                 
0063: 0157              xx_BIOS	EQU		0F600H
0064: 0157              xx_CONOUT	EQU	xx_BIOS + (3 * 4)
0065: 0157                                 
0066: 0157              		ORG		(($+0100H)/0100H) * 0100H
0067: 0200                                 
0068: 0200                                 
0069: 0200              ;--------------Show address1 & Show Address2-------------
0070: 0200              ; will display the address and contenets pointed to by HL.
0071: 0200              ; x_showAddress1 -  displays: abcd = nn		
0072: 0200              ; x_showAddress2 -  displays: abcd = nnmm		
0073: 0200                                 
0074: 0200              x_showAddress1:    
0075: 0200  F5          		PUSH	AF          
0076: 0201  C5          		PUSH	BC          
0077: 0202  D5          		PUSH	DE          
0078: 0203  E5          		PUSH	HL          
0079: 0204              		                 
0080: 0204  CD2102      		CALL	xx_SA0      
0081: 0207  CD8202      		CALL	xx_CRLF     
0082: 020A  C39102      		JMP		xx_FullExit		; restore registers and return
0083: 020D              		                 
0084: 020D              x_showAddress2:    
0085: 020D  F5          		PUSH	AF          
0086: 020E  C5          		PUSH	BC          
0087: 020F  D5          		PUSH	DE          
0088: 0210  E5          		PUSH	HL          
0089: 0211              		                 
0090: 0211  E5          		PUSH	HL          
0091: 0212  CD2102      		CALL	xx_SA0      
0092: 0215  E1          		POP		HL          
0093: 0216  23          		INX		HL          
0094: 0217  7E          		MOV		A,M         
0095: 0218  CD3502      		CALL	x_showRegA  
0096: 021B  CD8202      		CALL	xx_CRLF     
0097: 021E  C39102      		JMP		xx_FullExit		; restore registers and return
0098: 0221                                 
0099: 0221              xx_SA0:            
0100: 0221  E5          		PUSH	HL          
0101: 0222  CD6D02      		CALL	x_displayHL 
0102: 0225  213102      		LXI		HL,xx_MEQUALS
0103: 0228  CD5A02      		CALL	x_displayMessage
0104: 022B  E1          		POP		HL          
0105: 022C  7E          		MOV		A,M         
0106: 022D  CD3502      		CALL	x_showRegA  
0107: 0230  C9          		RET              
0108: 0231              ;                  
0109: 0231              xx_MEQUALS:        
0110: 0231  203D2000    		DB ' = ',xx_EOM  
0111: 0235                                 
0112: 0235              ;--------------Show address1 & Show Address2-------------
0113: 0235                                 
0114: 0235              ;--------------             x_showRegA        -------------
0115: 0235                                 
0116: 0235              ;	Display the contents of A
0117: 0235              x_showRegA:        
0118: 0235  F5          		PUSH	AF          
0119: 0236  C5          		PUSH	BC          
0120: 0237  D5          		PUSH	DE          
0121: 0238  E5          		PUSH	HL          
0122: 0239              		                 
0123: 0239  F5          		PUSH	PSW         
0124: 023A  CD4A02      		CALL	xx_SRA1     
0125: 023D              ;		MOV		E,A        
0126: 023D  CD8C02      		CALL	xx_PCHAR    
0127: 0240  F1          		POP		PSW         
0128: 0241  CD4E02      		CALL	xx_SRA2     
0129: 0244              ;		MOV		E,A        
0130: 0244  CD8C02      		CALL	xx_PCHAR    
0131: 0247  C39102      		JMP		xx_FullExit		; restore registers and return
0132: 024A                                 
0133: 024A              xx_SRA1:           
0134: 024A  0F          		RRC              
0135: 024B  0F          		RRC              
0136: 024C  0F          		RRC              
0137: 024D  0F          		RRC              
0138: 024E              xx_SRA2:           
0139: 024E  E60F        		ANI		0FH         
0140: 0250  FE0A        		CPI		0AH         
0141: 0252  FA5702      		JM		xx_SRA3      
0142: 0255  C607        		ADI		7           
0143: 0257              xx_SRA3:           
0144: 0257  C630        		ADI		30H         
0145: 0259  C9          		RET              
0146: 025A              ;--------------             x_showRegA        -------------
0147: 025A                                 
0148: 025A              ;--------------         x_displayMessage      -------------
0149: 025A              ; Display Message (HL) points to 00 terminated string
0150: 025A              x_displayMessage:  
0151: 025A  F5          		PUSH	AF          
0152: 025B  C5          		PUSH	BC          
0153: 025C  D5          		PUSH	DE          
0154: 025D  E5          		PUSH	HL          
0155: 025E              xx_DM:             
0156: 025E  7E          		MOV		A,M					; get next message byte
0157: 025F  B7          		ORA		A					; terminator (a = 0)?
0158: 0260  CA9102      		JZ		xx_FullExit			; restore registers and return
0159: 0263              	                  
0160: 0263  4F          		MOV		C,A					; prepare for output
0161: 0264  E5          		PUSH	HL					; save message pointer
0162: 0265  CD0CF6      		CALL	xx_CONOUT				; go to main console output routine	*******
0163: 0268  E1          		POP		H           
0164: 0269  23          		INX		H 					; point at next character
0165: 026A  C35E02      		JMP		xx_DM				; loop till done
0166: 026D              ;--------------         x_displayMessage      -------------
0167: 026D              ;--------------           x_displayHL          -------------
0168: 026D              x_displayHL:       
0169: 026D  E5          		PUSH	HL          
0170: 026E  7C          		MOV		A,H         
0171: 026F  CD3502      		CALL	x_showRegA  
0172: 0272  E1          		POP		HL          
0173: 0273  7D          		MOV		A,L         
0174: 0274  CD3502      		CALL	x_showRegA  
0175: 0277  C9          		RET              
0176: 0278              ;--------------           x_displayHL          -------------
0177: 0278                                 
0178: 0278              ;--------------              x_CRLF           -------------
0179: 0278              x_CRLF:            
0180: 0278  F5          		PUSH	AF          
0181: 0279  C5          		PUSH	BC          
0182: 027A  D5          		PUSH	DE          
0183: 027B  E5          		PUSH	HL          
0184: 027C  CD8202      		CALL	xx_CRLF				; call routine
0185: 027F  C39102      		JMP		xx_FullExit			; restore registers and return
0186: 0282                                 
0187: 0282              ;--------------              x_CRLF           -------------
0188: 0282                                 
0189: 0282              ;--------------              xx_CRLF           -------------
0190: 0282              xx_CRLF:           
0191: 0282  218902      		LXI		HL,xx_MCRLF 
0192: 0285  CD5A02      		CALL	x_displayMessage
0193: 0288  C9          		RET              
0194: 0289              xx_MCRLF:          
0195: 0289  0D0A00      		DB	xx_CR,xx_LF,xx_EOM
0196: 028C              ;--------------              xx_CRLF           -------------
0197: 028C                                 
0198: 028C              ;--------------             xx_PCHAR           -------------
0199: 028C              ;CHARACTER OUTPUT ROUTINE
0200: 028C              ;                  
0201: 028C              xx_PCHAR:          
0202: 028C  4F          		MOV		C,A         
0203: 028D  CD0CF6      		CALL	xx_CONOUT   
0204: 0290  C9          		RET		            
0205: 0291              ;--------------             xx_PCHAR           -------------
0206: 0291                                 
0207: 0291                                 
0208: 0291              ;                  
0209: 0291              ;-------------------- xx_FullExit ---------------------
0210: 0291              ; restores all the registeres and returns
0211: 0291              ; should be called by a JMP Statement
0212: 0291              xx_FullExit:       
0213: 0291  E1          		POP		HL          
0214: 0292  D1          		POP		DE          
0215: 0293  C1          		POP		BC          
0216: 0294  F1          		POP		AF          
0217: 0295  C9          		RET              
0218: 0296                                 
0219: 0296              ;=========================
0219: 0296              ;<<<<<<<<<<<<<<<<<<<<<<<   Include  >>>>>>>>>>>>>>>>
0221: 0296              				               
0222: 0296              CodeEnd:           




                                    Xref


0000	0000	$                             		  0066,

0006	E806	BDOSEntry                     		  0018,  0021,
0005	F600	BIOS                          		

0007	E000	CCPEntry                      		  0024,
0222	0296	CodeEnd                       		
0009	0000	CodeStart                     		

0037	0127	messBegin                     		  0012,
0038	013C	messOK                        		  0026,

0030	0126	test                          		  0015,

0179	0278	x_CRLF                        		
0168	026D	x_displayHL                   		  0101,
0150	025A	x_displayMessage              		  0013,  0027,  0103,  0192,
0074	0200	x_showAddress1                		
0084	020D	x_showAddress2                		
0117	0235	x_showRegA                    		  0095,  0106,  0171,  0174,
0063	F600	xx_BIOS                       		  0064,
0064	F60C	xx_CONOUT                     		  0162,  0203,
0061	000D	xx_CR                         		  0037,  0038,  0195,
0190	0282	xx_CRLF                       		  0081,  0096,  0184,
0155	025E	xx_DM                         		  0165,
0059	0000	xx_EOM                        		  0037,  0038,  0110,  0195,
0212	0291	xx_FullExit                   		  0082,  0097,  0131,  0158,  0185,
0060	000A	xx_LF                         		  0037,  0038,  0195,
0194	0289	xx_MCRLF                      		  0191,
0109	0231	xx_MEQUALS                    		  0102,
0201	028C	xx_PCHAR                      		  0126,  0130,
0099	0221	xx_SA0                        		  0080,  0091,
0133	024A	xx_SRA1                       		  0124,
0138	024E	xx_SRA2                       		  0128,
0143	0257	xx_SRA3                       		  0141,
