0001: 0000                ;	Page 70/493   Programmers CPM Handbook by Andy Johnston-Laird
0002: 0000                                    
0003: 0000                TPA			EQU		0100H	; Start of Transient program Area
0004: 0000                Space		EQU		020H	; Blan or Space
0005: 0000                                    
0006: 0000                			ORG		TPA		; set location counter to base of TPA
0007: 0100                CodeStart:          
0008: 0100     CD3601     Start:		CALL	CTP		; Test bed for CTP
0009: 0103     00         			NOP              
0010: 0104                	; This subroutine breaks the command like tail apart, placing each value
0011: 0104                	; in a a separate string area
0012: 0104                	                   
0013: 0104                	; Return Parameters:
0014: 0104                	; A = 0- No error ( Z flag is set)
0015: 0104                	; B = Number of parameters
0016: 0104                	; HL -> Table of addresses.
0017: 0104                	;			Each address points to a null-byte terminated parameter string
0018: 0104                	;		If too many parameters are specified, then A = TMP
0019: 0104                	;		If one parameter is too long, then A = PTL and D points to the
0020: 0104                	;		first character of the offending parameter
0021: 0104                	                   
0022: 0104                ComTail				EQU	080H	; Command tail base page
0023: 0104                ComTailCount		EQU	ComTail	; first byte in tail buffer
0024: 0104                TooManyParameters	EQU	1		; TMP error code
0025: 0104                ParameterTooLong	EQU	2		; PTL error code
0026: 0104                                    
0027: 0104                PTable:						; Table of pointers to Parameters
0028: 0104     0C01       		DW		P1			; Parameter 1
0029: 0106     1A01       		DW		P2			; Parameter 2
0030: 0108     2801       		DW		P3			; Parameter 3
0031: 010A                									; add more pointers if needed
0032: 010A     0000       		DW		0			; Terminator
0033: 010C                		                  
0034: 010C                		; Parameter Strings. The first byte is 00H so that unused parameters appear
0035: 010C                		; to be null strings, The last byte is set to 00H and is used to detect a
0036: 010C                		; parameter that is too long
0037: 010C     00         P1:		DB 		0         
0038: 010D     010101010101010101010101 		DB		1,1,1,1,1,1,1,1,1,1,1,1
0039: 0119     00         		DB		0             
0040: 011A     00         P2:		DB 		0         
0041: 011B     010101010101010101010101 		DB		1,1,1,1,1,1,1,1,1,1,1,1
0042: 0127     00         		DB		0             
0043: 0128     00         P3:		DB 		0         
0044: 0129     010101010101010101010101 		DB		1,1,1,1,1,1,1,1,1,1,1,1
0045: 0135     00         		DB		0             
0046: 0136                		; add more pointers if needed
0047: 0136                		                  
0048: 0136                CTP:                
0049: 0136     210401     		LXI		H,PTable		; HL -> table of addresses
0050: 0139     0E00       		MVI		C,0				; Set Parameter count
0051: 013B     3A8000     		LDA		ComTailCount 
0052: 013E     B7         		ORA		A				; Any parameters?
0053: 013F     C8         		RZ						; return if none
0054: 0140                		                  
0055: 0140     E5         		PUSH	H				; Save address table for later
0056: 0141     47         		MOV		B,A				; B = CommandTail count
0057: 0142     218100     		LXI		H,ComTail + 1	; Point at the actual characters
0058: 0145                CTPNextP:           
0059: 0145     E3         		XTHL					; HL-> Table of Addresses
0060: 0146                								; TOS -> CommandTail Pointer
0061: 0146     5E         		MOV		E,M				; get LS byte of Parameter address
0062: 0147     23         		INX		H				; update address pointer
0063: 0148     56         		MOV		D,M				; Get MS byte of parameter address
0064: 0149                								; DE-> Parameter string ( or is 0)
0065: 0149     7A         		MOV		A,D				; Get copy of MS byte of Addr.
0066: 014A     B3         		ORA		E				; Combine MS & LS byte
0067: 014B     CA8001     		JZ		CTPExitTMP			; Get out if too many Parameters
0068: 014E     23         		INX		H				; update pointer to next address
0069: 014F     E3         		XTHL					; HL-> CommandTail
0070: 0150                								; TOS -> update address pointer
0071: 0150                				; At this point, we have:
0072: 0150                				; HL -> next byte in CommandTail
0073: 0150                				; DE -> first byte of next parameter String
0074: 0150                CTPSkipB:           
0075: 0150     7E         		MOV		A,M				; Get the next parameter byte
0076: 0151     23         		INX		H				; update the CommandTail
0077: 0152     05         		DCR		B				; Any more Characters ?
0078: 0153     FA7301     		JM		CTPExit			; No, Get out
0079: 0156     FE20       		CPI		Space        
0080: 0158     CA5001     		JZ		CTPSkipB		; skip spaces
0081: 015B     0C         		INR		C				; up the parameter Counter
0082: 015C                CTPNextC:           
0083: 015C     12         		STAX	D				; Store in parameter string
0084: 015D     13         		INX		D				; increment pointer
0085: 015E     1A         		LDAX	D				; check next byte
0086: 015F     B7         		ORA		A				; is it a terminator ?
0087: 0160     CA7A01     		JZ		CTPexitPTL		; No, exit Parameter Too Long
0088: 0163     AF         		XRA		A				; want to put 00 at end
0089: 0164     12         		STAX	D				; Store in parameter String
0090: 0165     7E         		MOV		A,M				; Get next character from Tail
0091: 0166     23         		INX		H				; update the tail pointer
0092: 0167     05         		DCR		B				; any more characters ?
0093: 0168     FA7301     		JM		CTPexit			; no, then exit
0094: 016B     FE20       		CPI		Space			; is it a parameter terminator ?
0095: 016D     CA4501     		JZ		CTPNextP		; Yes so move to next Parameter
0096: 0170     C35C01     		JMP		CTPNextC		; No, so store it in the parameter string
0097: 0173                ;----------------		 
0098: 0173                		                  
0099: 0173                CTPexit:						; Normal exit
0100: 0173     AF         		XRA		A				; A = 0, Z-Flag set
0101: 0174                CTPexitC:						; Common Exit code
0102: 0174     E1         		POP		HL				; balance stack
0103: 0175     210401     		LXI		H,PTable		; Return ptr to parameter address table
0104: 0178     B7         		ORA		A				; ensure z-Flag set correctly
0105: 0179     C9         		RET               
0106: 017A                CTPexitPTL:         
0107: 017A     3E02       		MVI		A,ParameterTooLong	; set error code
0108: 017C     EB         		XCHG					; DE -> offending parameter
0109: 017D     C37401     		JMP		CTPexitC		; common exit
0110: 0180                CTPExitTMP:         
0111: 0180     3E01       		MVI		A,TooManyParameters	; set error code
0112: 0182     C37401     		JMP		CTPexitC		; common exit
0113: 0185                		                  
0114: 0185                CodeEnd:            
0115: 0185                 		End              
0116: 0185                                    




                                    Xref


0000	0000	$                             		

0114	0185	CODEEND                       		
0007	0100	CODESTART                     		
0022	0080	COMTAIL                       		  0023,  0057,
0023	0080	COMTAILCOUNT                  		  0051,
0048	0136	CTP                           		  0008,
0099	0173	CTPEXIT                       		  0078,  0093,
0101	0174	CTPEXITC                      		  0109,  0112,
0106	017A	CTPEXITPTL                    		  0087,
0110	0180	CTPEXITTMP                    		  0067,
0082	015C	CTPNEXTC                      		  0096,
0058	0145	CTPNEXTP                      		  0095,
0074	0150	CTPSKIPB                      		  0080,

0037	010C	P1                            		  0028,
0040	011A	P2                            		  0029,
0043	0128	P3                            		  0030,
0025	0002	PARAMETERTOOLONG              		  0107,
0027	0104	PTABLE                        		  0049,  0103,

0004	0020	SPACE                         		  0079,  0094,
0008	0100	START                         		

0024	0001	TOOMANYPARAMETERS             		  0111,
0003	0100	TPA                           		  0006,
